/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package LojaJogos;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/**
 *
 * @author vinicius
 */
public class EstoqueGui extends javax.swing.JFrame {

    /**
     * Creates new form EstoqueGui
     */
    public EstoqueGui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_quantidadeTotal = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_nomejogo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_idProduto = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_CategoriaJogo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_ClassificacaoIndicativa = new javax.swing.JTextField();
        bt_deletar = new javax.swing.JButton();
        bt_editar = new javax.swing.JButton();
        bt_pesquisar = new javax.swing.JButton();
        bt_incluir1 = new javax.swing.JButton();
        txt_id = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jLabel1.setText("Controle do Estoque");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Quantidade total:");

        txt_quantidadeTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_quantidadeTotalActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Nome do Jogo:");

        txt_nomejogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nomejogoActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Id do Produto:");

        txt_idProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_idProdutoActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Categoria Jogo:");

        txt_CategoriaJogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_CategoriaJogoActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Class. Indicativa:");

        bt_deletar.setBackground(new java.awt.Color(255, 51, 51));
        bt_deletar.setText("Deletar");
        bt_deletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_deletarActionPerformed(evt);
            }
        });

        bt_editar.setBackground(new java.awt.Color(255, 153, 51));
        bt_editar.setText("Editar");
        bt_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_editarActionPerformed(evt);
            }
        });

        bt_pesquisar.setBackground(new java.awt.Color(0, 204, 51));
        bt_pesquisar.setText("Pesquisar");
        bt_pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_pesquisarActionPerformed(evt);
            }
        });

        bt_incluir1.setBackground(new java.awt.Color(102, 102, 255));
        bt_incluir1.setText("Incluir");
        bt_incluir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_incluir1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bt_incluir1)
                        .addGap(18, 18, 18)
                        .addComponent(bt_editar)
                        .addGap(18, 18, 18)
                        .addComponent(bt_deletar)
                        .addGap(18, 18, 18)
                        .addComponent(bt_pesquisar)
                        .addGap(18, 18, 18)
                        .addComponent(txt_id, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_quantidadeTotal))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_nomejogo)
                            .addComponent(txt_CategoriaJogo)
                            .addComponent(txt_idProduto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                            .addComponent(txt_ClassificacaoIndicativa))))
                .addGap(197, 197, 197))
            .addGroup(layout.createSequentialGroup()
                .addGap(285, 285, 285)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_quantidadeTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_nomejogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_idProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_CategoriaJogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txt_ClassificacaoIndicativa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_deletar)
                    .addComponent(bt_editar)
                    .addComponent(bt_incluir1)
                    .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_pesquisar))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void txt_quantidadeTotalActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        // TODO add your handling code here:
    }                                                   

    private void txt_nomejogoActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void txt_idProdutoActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
    }                                             

    private void txt_CategoriaJogoActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        // TODO add your handling code here:
    }                                                 

    private void bt_deletarActionPerformed(java.awt.event.ActionEvent evt) {                                           
       try {

String driverName = "com.mysql.jdbc.Driver";
try { Class.forName(driverName); } catch (ClassNotFoundException ex) {

}

// Configurando a nossa conexão com um banco de dados//
            String serverName = "";    //caminho do servidor do BD

            String mydatabase = "";        //nome do seu banco de dados

            String url = "jdbc:mysql://" + serverName + "/" + mydatabase + "?useUnicode=true&characterEncoding=UTF8";

            String username = "";        //nome de um usuário de seu BD      

            String password = "";      //sua senha de acesso

            Connection conn = DriverManager.getConnection(url, username, password);

            Statement stmt = conn.createStatement();

//ResultSet rs = stmt.executeQuery( "SELECT nome FROM cliente WHERE color = 'blue'" );


stmt.execute("delete  from vinicius_estoque where id='"+txt_id.getText()+"'");            
conn.close();
System.out.println("Deletado com Sucesso");
}

catch (SQLException e) { System.out.println(e.getLocalizedMessage());

} 

    }                                          

    private void bt_incluir1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        
        try {

            String driverName = "com.mysql.jdbc.Driver";
            try {
                Class.forName(driverName);
            } catch (ClassNotFoundException ex) {

            }

// Configurando a nossa conexão com um banco de dados//
            String serverName = "";    //caminho do servidor do BD

            String mydatabase = "";        //nome do seu banco de dados

            String url = "jdbc:mysql://" + serverName + "/" + mydatabase + "?useUnicode=true&characterEncoding=UTF8";

            String username = "";        //nome de um usuário de seu BD      

            String password = "";      //sua senha de acesso

            Connection conn = DriverManager.getConnection(url, username, password);

            Statement stmt = conn.createStatement();

            //ResultSet rs = stmt.executeQuery( "SELECT nome FROM cliente WHERE color = 'blue'" );
            
            String quantidadeTotal = txt_quantidadeTotal.getText();
            String nomeJogo = txt_nomejogo.getText();
            String idProduto = txt_idProduto.getText();
            String CategoriaJogo= txt_CategoriaJogo.getText();
            String classificacaoIndicativa= txt_ClassificacaoIndicativa.getText();

            stmt.execute("insert into  vinicius_estoque(quantidadeTotal, nomeJogo, idProduto, CategoriaJogo, classificacaoIndicativa) values('"+quantidadeTotal+"','"+nomeJogo+"','"+idProduto+"','"+CategoriaJogo+"','"+classificacaoIndicativa+"')");
            conn.close();
            System.out.println("Salvo com Sucesso");

        } catch (SQLException e) {
            System.out.println(e.getLocalizedMessage());

        } // TODO add your handling code here: }                                        


                                            

    }                                           

    private void bt_pesquisarActionPerformed(java.awt.event.ActionEvent evt) {                                             
            try {

                String driverName = "com.mysql.jdbc.Driver";

            try {
                    Class.forName(driverName);
                } catch (ClassNotFoundException ex) {

                }

            // Configurando a nossa conexão com um banco de dados//
            String serverName = "";    //caminho do servidor do BD

            String mydatabase = "";        //nome do seu banco de dados

            String url = "jdbc:mysql://" + serverName + "/" + mydatabase + "?useUnicode=true&characterEncoding=UTF8";

            String username = "";        //nome de um usuário de seu BD      

            String password = "";      //sua senha de acesso
            

            Connection conn = DriverManager.getConnection(url, username, password);

            Statement stmt = conn.createStatement();

             //ResultSet rs = stmt.executeQuery( "SELECT nome FROM cliente WHERE color = 'blue'" );

            int id = Integer.parseInt(txt_id.getText());
            //String query = "SELECT * FROM vinicius_pessoa where nome ='"+nome+"' or "+id  ";
            String query = "SELECT * FROM vinicius_estoque where id ='"+id+"'";
            ResultSet rs = stmt.executeQuery(query);

            while (rs.next()) {
             System.out.println("  quantidadeTotal" + rs.getString("quantidadeTotal"));
    
  
            txt_quantidadeTotal.setText(rs.getString("quantidadeTotal"));
            txt_nomejogo.setText(rs.getString("nomeJogo"));
            txt_idProduto.setText(rs.getString("idProduto"));
            txt_CategoriaJogo.setText(rs.getString("categoriaJogo"));
            txt_ClassificacaoIndicativa.setText(rs.getString("classificacaoIndicativa"));
            

            //txt_mome.setText(rs.getString("nome"));
            //System.out.println(" IDPAIS :" + rs.getString("IDPAIS").trim());
            //System.out.println(" NOME: " + rs.getString("NOME").trim());
            // System.out.println("");
            }
                } catch (SQLException e) { System.out.println(e.getLocalizedMessage());

} // TODO add your handling code here: }                                        




    }                                            

    private void bt_editarActionPerformed(java.awt.event.ActionEvent evt) {                                          
        try {

            String driverName = "com.mysql.jdbc.Driver";
                try {
                Class.forName(driverName);
                } catch (ClassNotFoundException ex) {

            }

            // Configurando a nossa conexão com um banco de dados//
            String serverName = "";    //caminho do servidor do BD

            String mydatabase = "";        //nome do seu banco de dados

            String url = "jdbc:mysql://" + serverName + "/" + mydatabase + "?useUnicode=true&characterEncoding=UTF8";

            String username = "";        //nome de um usuário de seu BD      

            String password = "";      //sua senha de acesso

            Connection conn = DriverManager.getConnection(url, username, password);

            Statement stmt = conn.createStatement();

            //ResultSet rs = stmt.executeQuery( "SELECT nome FROM cliente WHERE color = 'blue'" );
            String id = txt_id.getText();
            String idProduto = txt_idProduto.getText();
            String nomeJogo = txt_nomejogo.getText();
            String CategoriaJogo= txt_CategoriaJogo.getText();
            String classificacaoIndicativa= txt_ClassificacaoIndicativa.getText();
            String stringQuantidadeTotal = txt_quantidadeTotal.getText(); //captura o texto do campo quantidade
            int quantidadeTotal = Integer.parseInt(stringQuantidadeTotal); // Converte o texto para um número inteiro

            
            
            stmt.execute("update  vinicius_estoque set idProduto='" + idProduto + "', nomeJogo='" + nomeJogo + "', CategoriaJogo='" + CategoriaJogo + "', classificacaoIndicativa='" + classificacaoIndicativa + "', quantidadeTotal='" + quantidadeTotal + "'  where id = '" + id + "' ");

            
            /*
            stmt.execute("update  vinicius_carrinho set idProduto='" + idProduto + "'  where id = '" + id + "' ");
            stmt.execute("update  vinicius_carrinho set data='" + data + "'  where id = '" + id + "' ");
            stmt.execute("update  vinicius_carrinho set data='" + cpf + "'  where id = '" + id + "' ");
            stmt.execute("update  vinicius_carrinho set data='" + id_livro + "'  where id = '" + id + "' ");
            stmt.execute("update  vinicius_carrinho set data='" + categoria + "'  where id = '" + id + "' ");
            */
            conn.close();
            System.out.println("Atualizado com Sucesso");
        } catch (SQLException e) {
            System.out.println(e.getLocalizedMessage());

        }
        
        
        
    }                                         

    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EstoqueGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EstoqueGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EstoqueGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EstoqueGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EstoqueGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton bt_deletar;
    private javax.swing.JButton bt_editar;
    private javax.swing.JButton bt_incluir1;
    private javax.swing.JButton bt_pesquisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txt_CategoriaJogo;
    private javax.swing.JTextField txt_ClassificacaoIndicativa;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_idProduto;
    private javax.swing.JTextField txt_nomejogo;
    private javax.swing.JTextField txt_quantidadeTotal;
    // End of variables declaration                   
}
